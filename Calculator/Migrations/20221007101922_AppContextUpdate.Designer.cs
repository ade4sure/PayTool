// <auto-generated />
using System;
using Calculator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Calculator.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221007101922_AppContextUpdate")]
    partial class AppContextUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("Calculator.Models.AppModels.EffectiveDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovedEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ApprovedStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CStructureId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OperationEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("OperationStartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CStructureId")
                        .IsUnique();

                    b.ToTable("EffectiveDates");
                });

            modelBuilder.Entity("Calculator.Models.AppModels.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CStructureId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CStructureId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Calculator.Models.AppModels.PayCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PayCategorys");
                });

            modelBuilder.Entity("Calculator.Models.AppModels.PaymentStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("PaymentStructures");
                });

            modelBuilder.Entity("Calculator.Models.AppModels.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CallDutyASUU")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CallDutyNurses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CallDutyOthers")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Conpuaa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Contiss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ContissRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Conuass")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConuassRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Conuss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Hazard")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<decimal>("ProffesionalAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShiftDutyNurses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShiftDutyOthers")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("Calculator.Models.AppModels.Union", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Unions");
                });

            modelBuilder.Entity("Calculator.Models.ViewModels.PromotionArr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ExtraJson")
                        .HasColumnType("longtext");

                    b.Property<string>("RangeJson")
                        .HasColumnType("longtext");

                    b.Property<int?>("UnionId")
                        .HasColumnType("int");

                    b.Property<string>("staffName")
                        .HasColumnType("longtext");

                    b.Property<string>("staffNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("staffStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("staffUnit")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UnionId");

                    b.ToTable("PromotionPayloads");
                });

            modelBuilder.Entity("Calculator.Models.AppModels.EffectiveDate", b =>
                {
                    b.HasOne("Calculator.Models.AppModels.PaymentStructure", "CStructure")
                        .WithOne("EffectiveDate")
                        .HasForeignKey("Calculator.Models.AppModels.EffectiveDate", "CStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CStructure");
                });

            modelBuilder.Entity("Calculator.Models.AppModels.Grade", b =>
                {
                    b.HasOne("Calculator.Models.AppModels.PaymentStructure", "CStructure")
                        .WithMany("Grades")
                        .HasForeignKey("CStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CStructure");
                });

            modelBuilder.Entity("Calculator.Models.AppModels.PaymentStructure", b =>
                {
                    b.HasOne("Calculator.Models.AppModels.PayCategory", "Category")
                        .WithMany("PayStructures")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Calculator.Models.AppModels.Step", b =>
                {
                    b.HasOne("Calculator.Models.AppModels.Grade", "Grade")
                        .WithMany("Steps")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("Calculator.Models.ViewModels.PromotionArr", b =>
                {
                    b.HasOne("Calculator.Models.AppModels.Union", "Union")
                        .WithMany()
                        .HasForeignKey("UnionId");

                    b.Navigation("Union");
                });

            modelBuilder.Entity("Calculator.Models.AppModels.Grade", b =>
                {
                    b.Navigation("Steps");
                });

            modelBuilder.Entity("Calculator.Models.AppModels.PayCategory", b =>
                {
                    b.Navigation("PayStructures");
                });

            modelBuilder.Entity("Calculator.Models.AppModels.PaymentStructure", b =>
                {
                    b.Navigation("EffectiveDate");

                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
